name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      
      run: |
        cd Album.Api
        dotnet build --no-restore
        dotnet publish -c Release --output ../Release -r linux-x64
        
          
    - name: Test
      run: |
        cd Album.Api.Tests
        dotnet test --verbosity normal  


    - name: Build docker-build
      run : docker build . -t container
      

      
      
    - name: ECR
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCES_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: loginECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: build container and tag 
      run: |
        docker build -t cnsd/album .
        docker tag cnsd/album 309791011032.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:${{ github.run_number}}
        docker push 309791011032.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:${{ github.run_number}}
        
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: AlbumContainer
        image: 309791011032.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:${{ github.run_number}}
   
   
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: AlbumServiceBlueGreen
        cluster: AlbumCluster
        wait-for-service-stability: true
      
      
      
      
      
      
